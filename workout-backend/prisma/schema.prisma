// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  email String @unique
  name String
  password String 
  image String[]
  exerciseLogs ExerciseLog[]
  workoutLog WorkoutLog[]
}

model Exercise {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name String
  iconPath String @map("icon_path")
  times Int
  Workouts Workout[]
  lengthTime Int @map("lenght_time") @default(15)
  ExerciseLog ExerciseLog? @relation(fields: [exerciseLogId],references: [id])
  exerciseLogId Int? @map("exercise_log_id")
}

model Workout {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name String
  exercises Exercise[]
  workoutLogs WorkoutLog[]
}


model ExerciseLog {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isCompleted Boolean @default(false) @map("is_completed")
  times ExerciseTimes[]
  User User? @relation(fields: [userId],references: [id])
  userId Int?
  Exercise Exercise[]
  WorkoutLog WorkoutLog? @relation(fields: [workoutLogId],references: [id])
  workoutLogId Int? @map("workout_log_id")
}

model ExerciseTimes {
   id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  weight Int @default(0)
  repeat Int @default(0)
  isCompleted Boolean @default(false) @map("is_completed")
  exerciseLog ExerciseLog @relation(fields: [exerciseLogId], references: [id])
  exerciseLogId Int @map("exercise_log_id")
}

 model WorkoutLog {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isCompleted Boolean @default(false) @map("is_completed")
  exerciseLogs ExerciseLog[]
  workout Workout @relation (fields: [workoutId],references: [id])
  workoutId Int
  user User @relation(fields: [userId],references: [id])
  userId Int
 }